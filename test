var files = [];
var additionalFiles = [];
var imgCust = "";
var jumioDocs = [];

var promises = [];
var vparams = {
    Bucket: "rocketmnlacustomerdocumentsbucket",
};

let data = await s3.listObjects(vparams).promise();
data.Contents.forEach((doc) => {
    promises.push(
        processFileObjects(doc.Key).then((obj) => {
            //need to be removed pdf support added to create pdf
            if (!doc.Key.includes(".pdf")) {
                if (doc.Key.split("/")[1] === "PrimaryDocument") {
                    files.push(obj);
                }
                if (doc.Key.split("/")[1] === "AdditionalDocument") {
                    additionalFiles.push(obj);
                }
                if (doc.Key.split("/")[1] === "SuppCustomerSignature") {
                    imgCust = obj;
                }
                if (doc.Key.split("/")[1] === "JumioDocument") {
                    if (obj.imagePreviewUrl.includes("jpeg")) {
                        jumioDocs.push(obj);
                    }
                }
            }
        })
    );
});

return await Promise.all(promises).then(() => {
    console.log("fileObject jumioDocs length in s3 bucket: ", files.length);
    return files;
});

const processFileObjects = async (key) => {
    let getObjparams = {
        Bucket: "rocketmnlacustomerdocumentsbucket",
        Key: key,
    };
    let obj = {};
    let data = await s3.getObject(getObjparams).promise();
    console.log("key is" + key);
    let keyArr = key.split("/");
    let docType = keyArr[1];
    let fileName = keyArr[2];
    let imagePreviewUrl =
        "data:" +
        data.ContentType +
        ";" +
        "base64," +
        data.Body.toString("base64");
    if (keyArr.length === 4) {
        fileName = keyArr[3];
    }
    console.log(data);
    switch (docType) {
        case "AdditionalDocument": {
            obj = {
                fileName: fileName,
                docName: docName,
                file: {},
            };
            break;
        }
        case "PrimaryDocument": {
            obj = {
                imagePreviewUrl: imagePreviewUrl,
                fileName: fileName,
                docName: docName,
                file: {},
            };
            break;
        }
        case "CustomerSignature": {
            obj = {
                imagePreviewUrl: imagePreviewUrl,
                break;
            };
            break;
        }
        case "SuppCustomerSignature": {
            obj = {
                imagePreviewUrl: imagePreviewUrl,
                break;
            };
            break;
        }
        case "JumioDocuments": {
            obj = {
                imagePreviewUrl: imagePreviewUrl,
                fileName: fileName,
                docName: docName,
                file: {},
            };
            break;
        }
    }
    return obj;
};
